// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Restart status: restart_error renders correctly to match the snapshot. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <RenderStatus
    node={
      Object {
        "isRestarted": true,
        "node": "nodo-master",
      }
    }
    statusRestart="restart_error"
  >
    <EuiDescriptionListTitle>
      <dt
        className="euiDescriptionList__title"
      >
        <span
          className="euiToolTipAnchor"
        >
          <WzTextWithTooltipIfTruncated
            elementStyle={
              Object {
                "maxWidth": "85px",
              }
            }
          >
            <span
              style={
                Object {
                  "display": "block",
                  "maxWidth": "85px",
                  "overflow": "hidden",
                  "paddingBottom": "3px",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                }
              }
            />
          </WzTextWithTooltipIfTruncated>
        </span>
      </dt>
    </EuiDescriptionListTitle>
    <EuiDescriptionListDescription
      className="wz-text-left"
    >
      <dd
        className="euiDescriptionList__description wz-text-left"
      >
        <EuiIconTip
          aria-label="Synchronized"
          color="success"
          size="m"
          type="check"
        >
          <EuiToolTip
            delay="regular"
            position="top"
          >
            <span
              className="euiToolTipAnchor"
              onKeyUp={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <EuiIcon
                aria-label="Synchronized"
                color="success"
                onBlur={[Function]}
                onFocus={[Function]}
                size="m"
                tabIndex={0}
                type="check"
              >
                <EuiIconCheck
                  aria-label="Synchronized"
                  className="euiIcon euiIcon--medium euiIcon--success"
                  focusable="true"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  role="img"
                  style={null}
                  tabIndex={0}
                >
                  <svg
                    aria-label="Synchronized"
                    className="euiIcon euiIcon--medium euiIcon--success"
                    focusable="true"
                    height={16}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    role="img"
                    style={null}
                    tabIndex={0}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.5 12a.502.502 0 01-.354-.146l-4-4a.502.502 0 01.708-.708L6.5 10.793l6.646-6.647a.502.502 0 01.708.708l-7 7A.502.502 0 016.5 12"
                      fillRule="evenodd"
                    />
                  </svg>
                </EuiIconCheck>
              </EuiIcon>
            </span>
          </EuiToolTip>
        </EuiIconTip>
      </dd>
    </EuiDescriptionListDescription>
  </RenderStatus>
  ;
</Provider>
`;

exports[`Restart status: restarted_info renders correctly to match the snapshot. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <RenderStatus
    node={
      Object {
        "isRestarted": true,
        "node": "nodo-master",
      }
    }
    statusRestart="restarted_info"
  >
    <EuiDescriptionListTitle>
      <dt
        className="euiDescriptionList__title"
      >
        <span
          className="euiToolTipAnchor"
        >
          <WzTextWithTooltipIfTruncated
            elementStyle={
              Object {
                "maxWidth": "85px",
              }
            }
          >
            <span
              style={
                Object {
                  "display": "block",
                  "maxWidth": "85px",
                  "overflow": "hidden",
                  "paddingBottom": "3px",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                }
              }
            />
          </WzTextWithTooltipIfTruncated>
        </span>
      </dt>
    </EuiDescriptionListTitle>
    <EuiDescriptionListDescription
      className="wz-text-left"
    >
      <dd
        className="euiDescriptionList__description wz-text-left"
      >
        <EuiIconTip
          aria-label="Synchronized"
          color="success"
          size="m"
          type="check"
        >
          <EuiToolTip
            delay="regular"
            position="top"
          >
            <span
              className="euiToolTipAnchor"
              onKeyUp={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <EuiIcon
                aria-label="Synchronized"
                color="success"
                onBlur={[Function]}
                onFocus={[Function]}
                size="m"
                tabIndex={0}
                type="check"
              >
                <EuiIconEmpty
                  aria-hidden={true}
                  aria-label="Synchronized"
                  className="euiIcon euiIcon--medium euiIcon--success euiIcon-isLoading"
                  focusable="true"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  role="img"
                  style={null}
                  tabIndex={0}
                >
                  <svg
                    aria-hidden={true}
                    aria-label="Synchronized"
                    className="euiIcon euiIcon--medium euiIcon--success euiIcon-isLoading"
                    focusable="true"
                    height={16}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    role="img"
                    style={null}
                    tabIndex={0}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  />
                </EuiIconEmpty>
              </EuiIcon>
            </span>
          </EuiToolTip>
        </EuiIconTip>
      </dd>
    </EuiDescriptionListDescription>
  </RenderStatus>
  ;
</Provider>
`;

exports[`Restart status: restarting renders correctly to match the snapshot. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <RenderStatus
    node={
      Object {
        "isRestarted": false,
        "node": "nodo-master",
      }
    }
    statusRestart="restarting"
  >
    <EuiDescriptionListTitle>
      <dt
        className="euiDescriptionList__title"
      >
        <span
          className="euiToolTipAnchor"
        >
          <WzTextWithTooltipIfTruncated
            elementStyle={
              Object {
                "maxWidth": "85px",
              }
            }
          >
            <span
              style={
                Object {
                  "display": "block",
                  "maxWidth": "85px",
                  "overflow": "hidden",
                  "paddingBottom": "3px",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                }
              }
            />
          </WzTextWithTooltipIfTruncated>
        </span>
      </dt>
    </EuiDescriptionListTitle>
    <EuiDescriptionListDescription
      className="wz-text-left"
    >
      <dd
        className="euiDescriptionList__description wz-text-left"
      >
        <EuiLoadingSpinner
          size="m"
        >
          <span
            className="euiLoadingSpinner euiLoadingSpinner--medium"
          />
        </EuiLoadingSpinner>
      </dd>
    </EuiDescriptionListDescription>
  </RenderStatus>
  ;
</Provider>
`;

exports[`Restart status: sync_error renders correctly to match the snapshot. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <RenderStatus
    node={
      Object {
        "node": "nodo-master",
        "synced": true,
      }
    }
    statusRestart="sync_error"
  >
    <EuiDescriptionListTitle>
      <dt
        className="euiDescriptionList__title"
      >
        <span
          className="euiToolTipAnchor"
        >
          <WzTextWithTooltipIfTruncated
            elementStyle={
              Object {
                "maxWidth": "85px",
              }
            }
          >
            <span
              style={
                Object {
                  "display": "block",
                  "maxWidth": "85px",
                  "overflow": "hidden",
                  "paddingBottom": "3px",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                }
              }
            />
          </WzTextWithTooltipIfTruncated>
        </span>
      </dt>
    </EuiDescriptionListTitle>
    <EuiDescriptionListDescription
      className="wz-text-left"
    >
      <dd
        className="euiDescriptionList__description wz-text-left"
      >
        <EuiIconTip
          aria-label="Synchronized"
          color="success"
          size="m"
          type="check"
        >
          <EuiToolTip
            delay="regular"
            position="top"
          >
            <span
              className="euiToolTipAnchor"
              onKeyUp={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <EuiIcon
                aria-label="Synchronized"
                color="success"
                onBlur={[Function]}
                onFocus={[Function]}
                size="m"
                tabIndex={0}
                type="check"
              >
                <EuiIconCheck
                  aria-label="Synchronized"
                  className="euiIcon euiIcon--medium euiIcon--success"
                  focusable="true"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  role="img"
                  style={null}
                  tabIndex={0}
                >
                  <svg
                    aria-label="Synchronized"
                    className="euiIcon euiIcon--medium euiIcon--success"
                    focusable="true"
                    height={16}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    role="img"
                    style={null}
                    tabIndex={0}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.5 12a.502.502 0 01-.354-.146l-4-4a.502.502 0 01.708-.708L6.5 10.793l6.646-6.647a.502.502 0 01.708.708l-7 7A.502.502 0 016.5 12"
                      fillRule="evenodd"
                    />
                  </svg>
                </EuiIconCheck>
              </EuiIcon>
            </span>
          </EuiToolTip>
        </EuiIconTip>
      </dd>
    </EuiDescriptionListDescription>
  </RenderStatus>
  ;
</Provider>
`;

exports[`Restart status: syncing renders correctly to match the snapshot. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <RenderStatus
    node={
      Object {
        "node": "nodo-master",
        "synced": true,
      }
    }
    statusRestart="syncing"
  >
    <EuiDescriptionListTitle>
      <dt
        className="euiDescriptionList__title"
      >
        <span
          className="euiToolTipAnchor"
        >
          <WzTextWithTooltipIfTruncated
            elementStyle={
              Object {
                "maxWidth": "85px",
              }
            }
          >
            <span
              style={
                Object {
                  "display": "block",
                  "maxWidth": "85px",
                  "overflow": "hidden",
                  "paddingBottom": "3px",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                }
              }
            />
          </WzTextWithTooltipIfTruncated>
        </span>
      </dt>
    </EuiDescriptionListTitle>
    <EuiDescriptionListDescription
      className="wz-text-left"
    >
      <dd
        className="euiDescriptionList__description wz-text-left"
      >
        <EuiIconTip
          aria-label="Success"
          color="success"
          size="m"
          type="check"
        >
          <EuiToolTip
            delay="regular"
            position="top"
          >
            <span
              className="euiToolTipAnchor"
              onKeyUp={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <EuiIcon
                aria-label="Success"
                color="success"
                onBlur={[Function]}
                onFocus={[Function]}
                size="m"
                tabIndex={0}
                type="check"
              >
                <EuiIconCheck
                  aria-label="Success"
                  className="euiIcon euiIcon--medium euiIcon--success"
                  focusable="true"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  role="img"
                  style={null}
                  tabIndex={0}
                >
                  <svg
                    aria-label="Success"
                    className="euiIcon euiIcon--medium euiIcon--success"
                    focusable="true"
                    height={16}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    role="img"
                    style={null}
                    tabIndex={0}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.5 12a.502.502 0 01-.354-.146l-4-4a.502.502 0 01.708-.708L6.5 10.793l6.646-6.647a.502.502 0 01.708.708l-7 7A.502.502 0 016.5 12"
                      fillRule="evenodd"
                    />
                  </svg>
                </EuiIconCheck>
              </EuiIcon>
            </span>
          </EuiToolTip>
        </EuiIconTip>
      </dd>
    </EuiDescriptionListDescription>
  </RenderStatus>
</Provider>
`;
